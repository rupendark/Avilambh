{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Documents\\\\GitHub\\\\Avilambh\\\\frontend\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport moment from \"moment\";\nimport Chart from \"react-apexcharts\";\nimport { Link } from \"react-router-dom\";\nimport Footer from \"./Footer\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [selectedJob, setSelectedJob] = useState([]);\n  const [currtime, setCurrTime] = useState();\n  const today = moment().format(\"YYYY-MM-DD\");\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const now = new Date();\n      const now2 = moment(now).format(\"YYYY-MM-DDThh:mm A\");\n      setCurrTime(now2);\n    }, 1000); // Update time every second\n    return () => clearInterval(interval); // Cleanup interval on unmount\n  }, []);\n  useEffect(() => {\n    axios.get(\"http://localhost:5000/jobs\").then(response => {\n      setJobs(response.data);\n    }).catch(error => {\n      console.error(\"Error fetching job data:\", error);\n    });\n  }, []);\n  const startTime = new Date(selectedJob.start_time); // Example start time\n  const currTime = new Date(currtime); // Example end time\n  const endTime = new Date(selectedJob.end_time); // Example end time\n  const diff1 = currTime - startTime; // Difference in milliseconds\n  const diff2 = endTime - currTime; // Difference in milliseconds\n  const [chartConfig, setChartConfig] = useState({\n    type: \"pie\",\n    width: 150,\n    height: 150,\n    series: [diff1, diff2],\n    options: {\n      chart: {\n        toolbar: {\n          show: false\n        }\n      },\n      title: {\n        show: \"\"\n      },\n      dataLabels: {\n        enabled: false\n      },\n      colors: [\"#ff8f00\", \"#00897b\"],\n      legend: {\n        show: false\n      }\n    }\n  });\n\n  // Filter jobs for the current day\n  const todayJobs = jobs.filter(job => moment(job.start_time).isSame(today, \"day\"));\n  const getJobStyle = batch => {\n    const batchColors = {\n      1: \"#f6c23e\",\n      // Yellow\n      2: \"#1cc88a\",\n      // Green\n      3: \"#36b9cc\" // Blue\n    };\n    return {\n      backgroundColor: batchColors[batch] || \"#4e73df\",\n      // Default Blue\n      color: \"#fff\",\n      padding: \"10px\",\n      borderRadius: \"5px\",\n      marginBottom: \"8px\"\n    };\n  };\n  const updateChartConfig = job => {\n    // const startTime = new Date(job.start_time);\n    // const endTime = new Date(job.end_time);\n    // const nowTime = new Date(currtime);\n    const startTime = job.start_time;\n    const endTime = job.end_time;\n    const nowTime = currtime;\n    console.log(startTime, endTime, nowTime);\n    let complete, left;\n    if (nowTime >= endTime) {\n      complete = 100;\n      left = 0;\n    } else if (nowTime <= startTime) {\n      complete = 0;\n      left = 100;\n    } else {\n      // const totalDuration = endTime - startTime;\n      // const completedDuration = \n\n      complete = nowTime - startTime;\n      left = endTime - startTime;\n\n      // complete = Math.max(0, (completedDuration / totalDuration) * 100);\n      // left = Math.max(0, 100 - complete);\n    }\n    setChartConfig({\n      type: \"pie\",\n      width: 150,\n      height: 150,\n      series: [complete, left],\n      options: {\n        chart: {\n          toolbar: {\n            show: false\n          }\n        },\n        title: {\n          show: \"\"\n        },\n        dataLabels: {\n          enabled: false\n        },\n        colors: [\"#00897b\", \"#ff8f00\"],\n        legend: {\n          show: false\n        }\n      }\n    });\n  };\n  const handleSelectEvent = item => {\n    console.log(\"selected\");\n    setSelectedJob({\n      id: item.job_id,\n      task: item.task,\n      batch: item.batch,\n      start_time: moment(item.start_time).format(\"YYYY-MM-DDThh:mm A\"),\n      end_time: moment(item.end_time).format(\"YYYY-MM-DDThh:mm A\"),\n      smp_id: item.smp_id\n    });\n  };\n  useEffect(() => {\n    if (selectedJob && selectedJob.start_time && selectedJob.end_time) {\n      updateChartConfig(selectedJob);\n    }\n  }, [selectedJob, currtime]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex h-[90vh]\",\n        children: /*#__PURE__*/_jsxDEV(\"aside\", {\n          className: \"w-[20vw]  bg-[#4A4752] text-white p-6 flex flex-col justify-between\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-4xl font-bold text-[#359BD2] text-center\",\n              children: \"AVILAMBH\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n              className: \"mt-6 space-y-4 pt-24 pl-8\",\n              children: [/*#__PURE__*/_jsxDEV(Link, {\n                to: \"/home\",\n                className: \"block text-gray-300 hover:text-white underline\",\n                children: \"HOME\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/Jobs\",\n                className: \"block text-gray-300 hover:text-white\",\n                children: \"JOB SCHEDULE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/reports\",\n                className: \"block text-gray-300 hover:text-white\",\n                children: \"REPORTS\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/safety\",\n                className: \"block text-gray-300 hover:text-white\",\n                children: \"SAFETY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/transport\",\n                className: \"block text-gray-300 hover:text-white\",\n                children: \"TRANSPORT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/inventory\",\n                className: \"block text-gray-300 hover:text-white\",\n                children: \"INVENTORY\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-[80vw] h-[80vh] fixed top-0 right-0 \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-[60vw] h-[40vh] bg-slate-500 mx-auto my-6 grid grid-cols-5 \",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-6 col-span-2 mx-auto\",\n            children: [selectedJob.task || \"Task\", selectedJob.id || \"job_id\", /*#__PURE__*/_jsxDEV(Chart, {\n              ...chartConfig\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"h-[40vh] p-4 col-span-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-2xl font-bold mb-4 \",\n              children: \"Today's Job Schedule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"h-[30vh] overflow-y-auto scrollbar-hide\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"grid grid-cols-4 gap-4 \",\n                children: todayJobs.length > 0 ? todayJobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: getJobStyle(job.batch),\n                  className: \"h-[15vh]\",\n                  onClick: () => handleSelectEvent(job),\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: job.task\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 224,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"text-xs\",\n                    children: [\"from: \", moment(job.start_time).format(\"hh:mm A\"), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 27\n                    }, this), \"to: \", moment(job.end_time).format(\"hh:mm A\")]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 226,\n                    columnNumber: 25\n                  }, this)]\n                }, job.job_id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"No jobs scheduled for today.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 154,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"GSbNJhuznfL6uQW1rR2H+e9L0PA=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","axios","moment","Chart","Link","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","jobs","setJobs","selectedJob","setSelectedJob","currtime","setCurrTime","today","format","interval","setInterval","now","Date","now2","clearInterval","get","then","response","data","catch","error","console","startTime","start_time","currTime","endTime","end_time","diff1","diff2","chartConfig","setChartConfig","type","width","height","series","options","chart","toolbar","show","title","dataLabels","enabled","colors","legend","todayJobs","filter","job","isSame","getJobStyle","batch","batchColors","backgroundColor","color","padding","borderRadius","marginBottom","updateChartConfig","nowTime","log","complete","left","handleSelectEvent","item","id","job_id","task","smp_id","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","length","map","style","onClick","_c","$RefreshReg$"],"sources":["C:/Users/hp/Documents/GitHub/Avilambh/frontend/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport moment from \"moment\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Footer from \"./Footer\";\r\n\r\nconst Home = () => {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [selectedJob, setSelectedJob] = useState([]);\r\n  const [currtime, setCurrTime] = useState();\r\n  const today = moment().format(\"YYYY-MM-DD\");\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      const now = new Date();\r\n      const now2 = moment(now).format(\"YYYY-MM-DDThh:mm A\");\r\n      setCurrTime(now2);\r\n    }, 1000); // Update time every second\r\n    return () => clearInterval(interval); // Cleanup interval on unmount\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:5000/jobs\")\r\n      .then((response) => {\r\n        setJobs(response.data);\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error fetching job data:\", error);\r\n      });\r\n  }, []);\r\n\r\n  const startTime = new Date(selectedJob.start_time); // Example start time\r\n  const currTime = new Date(currtime); // Example end time\r\n  const endTime = new Date(selectedJob.end_time); // Example end time\r\n  const diff1 = currTime - startTime; // Difference in milliseconds\r\n  const diff2 = endTime - currTime; // Difference in milliseconds\r\n  const [chartConfig, setChartConfig] = useState({\r\n    type: \"pie\",\r\n    width: 150,\r\n    height: 150,\r\n    series: [diff1, diff2],\r\n    options: {\r\n      chart: {\r\n        toolbar: {\r\n          show: false,\r\n        },\r\n      },\r\n      title: {\r\n        show: \"\",\r\n      },\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      colors: [\"#ff8f00\", \"#00897b\"],\r\n      legend: {\r\n        show: false,\r\n      },\r\n    },\r\n  });\r\n\r\n  // Filter jobs for the current day\r\n  const todayJobs = jobs.filter((job) =>\r\n    moment(job.start_time).isSame(today, \"day\")\r\n  );\r\n\r\n  const getJobStyle = (batch) => {\r\n    const batchColors = {\r\n      1: \"#f6c23e\", // Yellow\r\n      2: \"#1cc88a\", // Green\r\n      3: \"#36b9cc\", // Blue\r\n    };\r\n    return {\r\n      backgroundColor: batchColors[batch] || \"#4e73df\", // Default Blue\r\n      color: \"#fff\",\r\n      padding: \"10px\",\r\n      borderRadius: \"5px\",\r\n      marginBottom: \"8px\",\r\n    };\r\n  };\r\n\r\n  const updateChartConfig = (job) => {\r\n    // const startTime = new Date(job.start_time);\r\n    // const endTime = new Date(job.end_time);\r\n    // const nowTime = new Date(currtime);\r\n    const startTime = job.start_time;\r\n    const endTime = job.end_time;\r\n    const nowTime = currtime;\r\n    console.log(startTime,endTime,nowTime)\r\n\r\n    let complete, left;\r\n\r\n    if (nowTime >= endTime) {\r\n      complete = 100;\r\n      left = 0;\r\n    } else if (nowTime <= startTime) {\r\n      complete = 0;\r\n      left = 100;\r\n    } else {\r\n      // const totalDuration = endTime - startTime;\r\n      // const completedDuration = \r\n\r\n      complete = nowTime - startTime;\r\n      left = endTime - startTime;\r\n\r\n      // complete = Math.max(0, (completedDuration / totalDuration) * 100);\r\n      // left = Math.max(0, 100 - complete);\r\n    }\r\n    setChartConfig({\r\n      type: \"pie\",\r\n      width: 150,\r\n      height: 150,\r\n      series: [complete, left],\r\n      options: {\r\n        chart: {\r\n          toolbar: {\r\n            show: false,\r\n          },\r\n        },\r\n        title: {\r\n          show: \"\",\r\n        },\r\n        dataLabels: {\r\n          enabled: false,\r\n        },\r\n        colors: [\"#00897b\", \"#ff8f00\"],\r\n        legend: {\r\n          show: false,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleSelectEvent = (item) => {\r\n    console.log(\"selected\");\r\n    setSelectedJob({\r\n      id: item.job_id,\r\n      task: item.task,\r\n      batch: item.batch,\r\n      start_time: moment(item.start_time).format(\"YYYY-MM-DDThh:mm A\"),\r\n      end_time: moment(item.end_time).format(\"YYYY-MM-DDThh:mm A\"),\r\n      smp_id: item.smp_id,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (selectedJob && selectedJob.start_time && selectedJob.end_time) {\r\n      updateChartConfig(selectedJob);\r\n    }\r\n  }, [selectedJob, currtime]);\r\n\r\n  return (\r\n    <div>\r\n      <>\r\n        <div className=\"flex h-[90vh]\">\r\n          {/* Sidebar */}\r\n          <aside className=\"w-[20vw]  bg-[#4A4752] text-white p-6 flex flex-col justify-between\">\r\n            <div>\r\n              <h1 className=\"text-4xl font-bold text-[#359BD2] text-center\">\r\n                AVILAMBH\r\n              </h1>\r\n              <nav className=\"mt-6 space-y-4 pt-24 pl-8\">\r\n                <Link\r\n                  to=\"/home\"\r\n                  className=\"block text-gray-300 hover:text-white underline\"\r\n                >\r\n                  HOME\r\n                </Link>\r\n                <Link\r\n                  to=\"/Jobs\"\r\n                  className=\"block text-gray-300 hover:text-white\"\r\n                >\r\n                  JOB SCHEDULE\r\n                </Link>\r\n                <Link\r\n                  to=\"/reports\"\r\n                  className=\"block text-gray-300 hover:text-white\"\r\n                >\r\n                  REPORTS\r\n                </Link>\r\n                <Link\r\n                  to=\"/safety\"\r\n                  className=\"block text-gray-300 hover:text-white\"\r\n                >\r\n                  SAFETY\r\n                </Link>\r\n                <Link\r\n                  to=\"/transport\"\r\n                  className=\"block text-gray-300 hover:text-white\"\r\n                >\r\n                  TRANSPORT\r\n                </Link>\r\n                <Link\r\n                  to=\"/inventory\"\r\n                  className=\"block text-gray-300 hover:text-white\"\r\n                >\r\n                  INVENTORY\r\n                </Link>\r\n              </nav>\r\n            </div>\r\n          </aside>\r\n        </div>\r\n        <div className=\"w-[80vw] h-[80vh] fixed top-0 right-0 \">\r\n          <div className=\"w-[60vw] h-[40vh] bg-slate-500 mx-auto my-6 grid grid-cols-5 \">\r\n            <div className=\"p-6 col-span-2 mx-auto\">\r\n              {selectedJob.task || \"Task\"}\r\n              {selectedJob.id || \"job_id\"}\r\n              <Chart {...chartConfig} />\r\n            </div>\r\n\r\n            <div className=\"h-[40vh] p-4 col-span-3\">\r\n              <h2 className=\"text-2xl font-bold mb-4 \">Today's Job Schedule</h2>\r\n              <div className=\"h-[30vh] overflow-y-auto scrollbar-hide\">\r\n                <div className=\"grid grid-cols-4 gap-4 \">\r\n                  {todayJobs.length > 0 ? (\r\n                    todayJobs.map((job) => (\r\n                      <div\r\n                        key={job.job_id}\r\n                        style={getJobStyle(job.batch)}\r\n                        className=\"h-[15vh]\"\r\n                        onClick={() => handleSelectEvent(job)}\r\n                      >\r\n                        <strong>{job.task}</strong>\r\n                        <br />\r\n                        <span className=\"text-xs\">\r\n                          from: {moment(job.start_time).format(\"hh:mm A\")}\r\n                          <br />\r\n                          to: {moment(job.end_time).format(\"hh:mm A\")}\r\n                        </span>\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                    <p>No jobs scheduled for today.</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <Footer />\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}